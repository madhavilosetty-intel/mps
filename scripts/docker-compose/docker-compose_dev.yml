#/*********************************************************************
# Copyright (c) Intel Corporation 2020
# SPDX-License-Identifier: Apache-2.0
#**********************************************************************/
version: '3.3'
services: 
  rps:
    image: node:10
    ports: 
      - "${RPS_WEBSOCKETPORT}:${RPS_WEBSOCKETPORT}"
      - "${RPS_WEB_PORT}:${RPS_WEB_PORT}"
    environment: 
      RPS_USE_VAULT: ${RPS_USE_VAULT}
      RPS_NODE_ENV: ${RPS_NODE_ENV}
      RPS_HTTPS: ${RPS_HTTPS}
      RPS_USE_DB_PROFILES: ${RPS_USE_DB_PROFILES}
      RPS_DB_HOST: ${RPS_DB_HOST}
      RPS_DB_NAME: ${RPS_DB_NAME}
      RPS_DB_PORT: ${RPS_DB_PORT}
      RPS_DB_USER: ${RPS_DB_USER}
      RPS_DB_PASSWORD: ${RPS_DB_PASSWORD}
      RPS_WEBSOCKETTLS: ${RPS_WEBSOCKETTLS}
      RPS_WEB_PORT: ${RPS_WEB_PORT}
      RPS_WEBSOCKETPORT: ${RPS_WEBSOCKETPORT}
      RPS_XAPIKEY: ${RPS_XAPIKEY}
      RPS_VAULT_ADDRESS: ${RPS_VAULT_ADDRESS}
      RPS_VAULT_TOKEN: ${RPS_VAULT_TOKEN}
      RPS_SECRETS_PATH: ${RPS_SECRETS_PATH}
      RPS_DEVELOPER_MODE: ${DEVELOPER_MODE}
      RPS_CREDENTIALS_PATH: ${RPS_DEVELOPER_MODE}
      RPS_USER: ${RPS_MPS_USER}
      RPS_PASSWORD: ${RPS_MPS_PASSWORD}
      RPS_AMT_USER: ${RPS_AMT_USER}
      RPS_WEB_TLS_CERT: ${RPS_WEB_TLS_CERT}
      RPS_WEB_TLS_CERT_KEY: ${RPS_WEB_TLS_CERT_KEY}
      RPS_ROOT_CA_CERT: ${RPS_ROOT_CA_CERT}
      RPS_LOG_LEVEL: ${RPS_LOG_LEVEL}
    volumes:
      - ../../../RCS_MicroService:/RCS_MicroService
      - app-volume:/config
    working_dir: /RCS_MicroService
    command: npm run watch
  mps:
    image: node:10
    ports: 
      - "${MPS_WEB_PORT}:${MPS_WEB_PORT}"
      - "${MPS_PORT}:${MPS_PORT}"
    environment: 
      MPS_GENERATE_CERTS: ${MPS_GENERATE_CERTS}
      MPS_COMMON_NAME: ${MPS_COMMON_NAME}
      MPS_NODE_ENV: ${MPS_NODE_ENV}
      MPS_USE_ALLOWLIST: ${MPS_USE_ALLOWLIST}
      MPS_PORT: ${MPS_PORT}
      MPS_WEB_PORT: ${MPS_WEB_PORT}
      MPS_USERNAME: ${MPS_USER}
      MPS_PASS: ${MPS_PASSWORD}
      MPS_USE_GLOBAL_CREDENTIALS: ${MPS_USE_GLOBAL_CREDENTIALS}
      MPS_ENABLE_LOGGING: ${MPS_ENABLE_LOGGING}
      MPS_DEBUG: ${MPS_DEBUG}
      MPS_USE_VAULT: ${MPS_USE_VAULT}
      MPS_VAULT_ADDRESS: ${MPS_VAULT_ADDRESS}
      MPS_VAULT_TOKEN: ${MPS_VAULT_TOKEN}
      MPS_SECRETS_PATH: ${MPS_SECRETS_PATH}
      MPS_WEB_ADMIN_USER: ${MPS_WEB_ADMIN_USER}
      MPS_WEB_ADMIN_PASSWORD: ${MPS_WEB_ADMIN_PASSWORD}
      MPS_HTTPS: ${MPS_HTTPS}
      MPS_MPSXAPIKEY: ${MPS_MPSXAPIKEY}
      MPS_DEVELOPER_MODE: ${MPS_DEVELOPER_MODE}
      MPS_CREDENTIALS_PATH: ${MPS_CREDENTIALS_PATH}
      MPS_GUIDS_PATH: ${MPS_GUIDS_PATH}
      MPS_ORGS_PATH: ${MPS_ORGS_PATH}
      MPS_LISTEN_ANY: ${MPS_LISTEN_ANY}
      MPS_TLS_OFFLOAD: ${MPS_TLS_OFFLOAD}
      MPS_SESSION_ENCRYPTION_KEY: ${MPS_SESSION_ENCRYPTION_KEY}
      MPS_LOG_LEVEL: ${MPS_LOG_LEVEL}
    volumes:
      - ../../.:/MPS_Microservice
      - app-volume:/config
    working_dir: /MPS_Microservice
    command: npm run watch
  rpsdb:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${RPS_DB_NAME}
      POSTGRES_USER: ${RPS_DB_USER}
      POSTGRES_PASSWORD: ${RPS_DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes: 
      - ./data:/docker-entrypoint-initdb.d
  vault:
    image: "vault"
    ports: 
      - "8200:8200"
    environment: 
      VAULT_DEV_ROOT_TOKEN_ID: ${RPS_VAULT_TOKEN}
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    cap_add: 
      - IPC_LOCK
volumes:
    app-volume: